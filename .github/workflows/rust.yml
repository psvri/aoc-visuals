name: Rust

on:
  push:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - name: Setup Cache
      uses: actions/cache@v2
      with:
        path: |
          ~/.cargo/bin/
          ~/.cargo/registry/index/
          ~/.cargo/registry/cache/
          ~/.cargo/git/db/
          target/
          bin/
        key: ${{ runner.os }}-cargo-build-${{ hashFiles('Cargo.toml') }}
        restore-keys: ${{ runner.os }}-cargo-build
    - name: Install Dependencies
      uses: actions-rs/toolchain@v1
      with:
        components: cargo-make
        target: wasm32-unknown-unknown
    - name: Build wasm and js
      run: |
        mkdir -p scripts
        cargo make --profile release build-web
    - name: Upload wasm and js
      uses: actions/upload-artifact@v2
      with:
        name: build-output
        path: scripts

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Cache
        uses: actions/cache@v2
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-test-${{ hashFiles('Cargo.toml') }}
          restore-keys: ${{ runner.os }}-cargo-test
      - name: Run tests
        run: cargo test
      
  push:
    runs-on: ubuntu-latest
    needs: [build, test]
    steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        ref: web
    - name: Rebase
      run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git fetch
          git rebase origin/main
    - name: Download artifact
      uses: actions/download-artifact@v2
      with:
        name: build-output
    - name: Commit and push files
      run: |
        git add scripts/
        git commit -m "Updating pages"
        git push -f origin
